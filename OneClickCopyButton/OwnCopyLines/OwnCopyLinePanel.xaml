<UserControl x:Class="OneClickCopy.OwnCopyLines.OwnCopyLinePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OneClickCopy"
             xmlns:copylines="clr-namespace:OneClickCopy.OwnCopyLines"
             xmlns:resui="clr-namespace:OneClickCopy.Properties"
             mc:Ignorable="d"
             Height="70"
             MinWidth="200"
      
             d:DesignWidth="400" d:DesignHeight="70"
             d:DataContext="{d:DesignInstance Type=copylines:OwnCopyLineViewModel}">
    <UserControl.Style>
        <Style>
            <Setter Property="copylines:OwnCopyLinePanel.CopyOwnToSystemClipboardCommand"
                    Value="{Binding CopyOwnToSystemClipboardCommand}"/>
            <Setter Property="copylines:OwnCopyLinePanel.SaveCopyAndOpenInfoPopupCommand"
                    Value="{Binding SaveCopyAndOpenInfoPopupCommand}"/>
            <Setter Property="copylines:OwnCopyLinePanel.OpenInfoPopupOnUIElementCommand"
                    Value="{Binding OpenInfoPopupOnUIElementCommand}"/>
            <Setter Property="copylines:OwnCopyLinePanel.NotifyPointedFromClipboardCommand"
                    Value="{Binding NotifyPointedFromClipboardCommand}"/>
        </Style>
    </UserControl.Style>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <SolidColorBrush x:Key="ButtonBorderBrush" Color="Black" />
            <LinearGradientBrush x:Key="ButtonBackgroundBrush" StartPoint="0, 0" EndPoint="0,1">
                <GradientStop Color="LightGray" Offset="0.0"/>
                <GradientStop Color="WhiteSmoke" Offset="0.1"/>
                <GradientStop Color="WhiteSmoke" Offset="0.75"/>
                <GradientStop Color="Gray" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="DefaultLineButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="5, 10, 5, 10"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="buttonBorder" 
                                CornerRadius="5" BorderThickness="1" BorderBrush="{StaticResource ButtonBorderBrush}"
                                Background="{TemplateBinding Background}" >
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" TargetName="buttonBorder" Value="3"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CopyButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultLineButtonStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding HasOwnCopyContent}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1">
                                    <GradientStop Color="SkyBlue" Offset="0.0"/>
                                    <GradientStop Color="WhiteSmoke" Offset="0.1"/>
                                    <GradientStop Color="WhiteSmoke" Offset="0.75"/>
                                    <GradientStop Color="Gray" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="EditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultLineButtonStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsInfoPopupOpened}" Value="True">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1">
                                    <GradientStop Color="LightGreen" Offset="0.0"/>
                                    <GradientStop Color="Green" Offset="0.1"/>
                                    <GradientStop Color="YellowGreen" Offset="0.75"/>
                                    <GradientStop Color="Green" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <ToggleButton Grid.Column="0" x:Name="titleFixingButton"
                  BorderThickness="0" Background="Transparent" IsChecked="{Binding IsFixedTitle}">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect BlurRadius="2" Direction="280" ShadowDepth="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ToggleButton.Style>
            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border Canvas.Left="-7" BorderBrush="{StaticResource ButtonBorderBrush}" BorderThickness="0.75"
                    CornerRadius="2"
                    Background="{StaticResource ButtonBackgroundBrush}">
                    <TextBlock FontSize="9">
                    <Run>Title</Run>
                    </TextBlock>
                </Border>
                <Line X1="0" Y1="-8"
                    X2="0" Y2="3"
                    x:Name="titleFixingPinEdge" Stroke="Red" StrokeThickness="1.5">
                    <Line.Style>
                        <Style TargetType="{x:Type Line}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=titleFixingButton, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=titleFixingButton, Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Line.Style>
                </Line>
                <Polygon Points="-6,-20 -4,-18 -4,-10 -8,-6 8,-6 4,-10 4,-18 6,-20"
                                         Fill="CadetBlue" />
            </Canvas>
        </ToggleButton>

        <Button Grid.Column="1" Style="{StaticResource CopyButtonStyle}" x:Name="copyButton"
            Click="CopyToSystemClipboard"
            MouseRightButtonUp="OpenInfoPopupByCopyButton">
            <Grid>
                <TextBlock x:Name="ownCopyTitleText" 
                       HorizontalAlignment="Center"  VerticalAlignment="Center"
                       Text="{Binding Path=OwnCopyTitle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                       FontSize="15"
                       ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                <TextBlock x:Name="leftClickDescriptionText" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="4, 4, 0, 0"
                       Foreground="LightSlateGray" FontSize="9" FontWeight="Normal">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=copyButton, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                <Run Text="{x:Static resui:UIResource.TextLeftClickIsCopy}" />
                </TextBlock>
                <TextBlock x:Name="rightClickDescriptionText" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0, 4, 0, 4"
                       Foreground="LightSlateGray" FontSize="9" FontWeight="Normal">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=copyButton, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                <Run Text="{x:Static resui:UIResource.TextRightClickIsSaveCopy}" />
                </TextBlock>
            </Grid>
        </Button>

        <Button Grid.Column="2" Style="{StaticResource EditButtonStyle}" x:Name="editButton"
            Click="OpenInfoPopupByEditButton">
            <Canvas>
                <Line
                X1="3" Y1="35"
                X2="13" Y2="35"
                Stroke="DarkSlateBlue" StrokeThickness="2"/>
                <Polygon Points="15,27, 17,22 23,10 26,13 21,24 17,31"
                     Stroke="LightGray" StrokeThickness="0.5">
                    <Polygon.Fill>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="OrangeRed" Offset="0"/>
                            <GradientStop Color="OldLace" Offset="1"/>
                        </LinearGradientBrush>
                    </Polygon.Fill>
                </Polygon>
                <Polygon
                Points="13,35 15,27 17,31"
                Fill="Black" StrokeThickness="1"/>
            </Canvas>
        </Button>

        <Button Grid.Column="3" x:Name="addNewLineButton" DataContext=""
                Style="{StaticResource DefaultLineButtonStyle}">
            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center">
                <Canvas.Resources>
                    <LinearGradientBrush x:Key="AddStrokeBrush">
                        <GradientStop Color="ForestGreen" Offset="0"/>
                        <GradientStop Color="LawnGreen" Offset="1"/>
                    </LinearGradientBrush>
                </Canvas.Resources>
                <Line
                X1="-10" Y1="0"
                X2="10" Y2="0"
                Stroke="{StaticResource AddStrokeBrush}" StrokeThickness="3">
                </Line>
                <Line
                X1="0" Y1="-10"
                X2="0" Y2="10"
                Stroke="{StaticResource AddStrokeBrush}" StrokeThickness="3"/>
            </Canvas>
        </Button>

        <Button Grid.Column="4" x:Name="removeThisLineButton"
                Style="{StaticResource DefaultLineButtonStyle}">
            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center">
                <Canvas.Resources>
                    <LinearGradientBrush x:Key="DeleteStrokeBrush">
                        <GradientStop Color="Red" Offset="0"/>
                        <GradientStop Color="Pink" Offset="1"/>
                    </LinearGradientBrush>
                </Canvas.Resources>
                <Line
                X1="-9" Y1="-9"
                X2="9" Y2="9"
                Stroke="{StaticResource DeleteStrokeBrush}" StrokeThickness="3">
                </Line>
                <Line
                X1="-9" Y1="9"
                X2="9" Y2="-9"
                Stroke="{StaticResource DeleteStrokeBrush}" StrokeThickness="3"/>
            </Canvas>
        </Button>
    </Grid>
</UserControl>
