<Window x:Class="OneClickCopy.MainWindow"
        x:Name="NowWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:OneClickCopy"
        mc:Ignorable="d"
        Title="OneClickCopy" Width="Auto"
        WindowStyle="None" AllowsTransparency="True" BorderBrush="Black" BorderThickness="2"
        WindowStartupLocation="CenterScreen"
        MouseLeave="MakeWindowTransparent" MouseEnter="MakeWindowThick" 
        LocationChanged="NotifyIsChangedPositionOnScreen">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_CloseWindow" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_MinimizeWindow" />
    </Window.CommandBindings>
    <WindowChrome.WindowChrome>
        <WindowChrome x:Name="NowWindowChrome"
            CaptionHeight="0" ResizeBorderThickness="5" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type Window}">
            <EventSetter Event="SizeChanged" Handler="MakeWindowThick" />
            <EventSetter Event="SizeChanged" Handler="NotifyIsChangedWindowSize"/>
        </Style>
    </Window.Style>
    <Border Name="background" BorderThickness="2" BorderBrush="LightGray">
        <DockPanel x:Name="MainWindowDockPanel">
            <Border Name="TitleArea" DockPanel.Dock="Top" Height="32" BorderBrush="LightGray" BorderThickness="0.5">
                <Grid>
                    <Label x:Name="LabelTitleText"
                        VerticalContentAlignment="Center" Margin="0,0,10,0" MouseDown="IsClickedForDrag">
                        <TextBlock Text="{Binding Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                    </Label>

                    <Grid x:Name="CustomTitleBar" HorizontalAlignment="Right" Background="Transparent" Height="32">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="35"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="35"/>
                            <ColumnDefinition Width="35"/>
                            <ColumnDefinition Width="35"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type Button}" x:Key="SystemButton">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Width" Value="35"/>
                                <Setter Property="Height" Value="25"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"  BorderThickness="0">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Button.IsMouseOver" Value="True">
                                        <Setter Property="Button.Background" Value="LightGray" />
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </Grid.Resources>

                        <Label Grid.Column="0" x:Name="LabelWindowDrag" Height="32" Width="35" Visibility="Hidden"
                               MouseDown="IsClickedForDrag" Background="White">
                            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle Height="25" Width="25"
                                           Stroke="Black" StrokeThickness="0.5" StrokeDashArray="4" />
                                
                                <Line X1="4" Y1="12.5" X2="21" Y2="12.5" Stroke="Black" StrokeThickness="1.5"/>
                                <Line X1="12.5" Y1="4" X2="12.5" Y2="21" Stroke="Black" StrokeThickness="1.5"/>

                                <Polygon Points="4,12.5 6,10.5 6,14.5" Stroke="Black" StrokeThickness="1"/>
                                <Polygon Points="21,12.5 19,10.5 19,14.5" Stroke="Black" StrokeThickness="1"/>
                                <Polygon Points="12.5,4 10.5,6 14.5,6" Stroke="Black" StrokeThickness="1"/>
                                <Polygon Points="12.5,21 10.5,19 14.5,19" Stroke="Black" StrokeThickness="1"/>
                            </Canvas>
                        </Label>

                        <Border Grid.Column="1" Background="White" HorizontalAlignment="Center">
                            <CheckBox x:Name="CheckBoxCanBeTransparent"
                                      
                                      Checked="IsToggledCheckBoxCanBeTransparent" Unchecked="IsToggledCheckBoxCanBeTransparent">
                                <Canvas Height="32" Width="35" Background="White">
                                    <Rectangle Canvas.Left="3" Canvas.Top="3" Width="10" Height="10"
                                               Stroke="Black" StrokeThickness="1" StrokeDashArray="1" />
                                    <Polygon Canvas.Left="14" Canvas.Top="5" Height="20" Width="20"
                                             Stroke="Black" Fill="White" StrokeThickness="0.7"
                                             Points="2,2 2,18 6,15 8,20 10,20 10,18 8,14 13,14"/>
                                </Canvas>
                            </CheckBox>
                        </Border>

                        <Slider Grid.Column="2" x:Name="SliderOpacityAtMouseLeaving" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                Background="White"
                                Orientation="Horizontal"
                                Value="0.25" Minimum="0.1" Maximum="1" SmallChange="0.1" LargeChange="0.3"
                                ValueChanged="IsChangedOpacitySlide"
                                LostMouseCapture="IsFixedOpacitySlide" LostStylusCapture="IsFixedOpacitySlide"
                                LostTouchCapture="IsFixedOpacitySlide" KeyUp="IsFixedOpacitySlideByKey" />

                        <Button Grid.Column="3" Click="IsClickedTopmostButton">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource SystemButton}">
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Background" Value="LightGray" />
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Button.Style>
                            <Canvas Height="32" Width="35">
                                <Polygon Points="2,8 8,2 8,4 14,10 20,10 10,20 10,14 4,8"
                                         Fill="CadetBlue" />
                                <Line X1="15" Y1="15"
                                      X2="23" Y2="23"
                                      x:Name="PinEdge" Stroke="Red" StrokeThickness="1.5" Visibility="Hidden"/>
                            </Canvas>
                        </Button>

                        <Button Grid.Column="4" Style="{DynamicResource SystemButton}"
                                Command="{x:Static SystemCommands.MinimizeWindowCommand}">
                            <Rectangle Width="11"
                                Stroke="Black"
                                StrokeThickness="0.75"/>
                        </Button>

                        <Button Grid.Column="5" Command="{x:Static SystemCommands.CloseWindowCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource SystemButton}">
                                    <Style.Triggers>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter Property="Button.Background" Value="Red" />
                                        </Trigger>
                                    </Style.Triggers>

                                </Style>
                            </Button.Style>
                            <Canvas Height="32" Width="35">
                                <Line    
                                    X1="12" Y1="8" 
                                    X2="22" Y2="18"    
                                    Stroke="Black" StrokeThickness="0.75"/>

                                <Line    
                                    X1="12" Y1="18"    
                                    X2="22" Y2="8"  
                                    Stroke="Black" StrokeThickness="0.75"/>
                            </Canvas>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            
            <Grid x:Name="ClipboardLineListBackground">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <StackPanel x:Name="ClipboardLineListPanel" Orientation="Vertical"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="Transparent">
                    </StackPanel>

                    <local:ToastNotifier x:Name="MessageNotifier" Opacity="0"
                        Margin="15"  HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                </Grid>
                
            </Grid>
        </DockPanel>
    </Border>
</Window>
